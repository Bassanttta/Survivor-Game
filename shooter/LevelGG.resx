<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABQEAAAnM2kAISAzECgqWU0kJkSNKytbrzEyXbE6PGOSKSpWVRseLxYAAAAAAgEAAAAA
        AAAAAAAAAAAAACZCXgAJKBUBNWikOzdHd7AsL2TvJCZX/istYv8tL3z/LS96/iwwcvE0O3e4NzZbSAIE
        AAQWGCAAAAAAAEZCVAAAAAAATll2UThxtuBAYqj/QUN5/0RNgP9IVIv/LDR3/ywub/8nLGb/NDuQ/z9F
        keZARnNgEgcAAyckKwA3c70AOnCwNVx1qt1SZ5f/P16W/0tWhP9SXIj/UmKe/ztJf/8tMVb/LC9k/0BB
        mP9kZ6//XmKb5EJKbkN3ebUAuUwjCXlshqVLjc//Qn26/z1inP88X5X/OERw/zRDcP9DUoH/S1F3/ztA
        YP9RU43/cHOv/1Zflf9MT3yyQykwEXtNXDuPUFbpkGdz/2N3n/9KcK3/QVWC/ycsVf8qM1//MT12/zA5
        bv8xPXX/MUWG/01Ykf9zWXj/b0Zo7lQ3U0ldPmJ1ZjxZ/YhJT/+hWFL/lWxy/1Jehv8lKEf/KjRe/y9A
        fP83Q2//U055/2lLa/+ET2L/gUdX/25AWf5bO1SERjBUllEyUv9yQlH/j1BN/6JdWf9PS2n/LC9N/yMn
        S/8zP2b/eFhs/5VWY/+DSlv/c0Ba/3A/Vv9mOk3/VTdLojcqR5VAKkn/YDxQ/4dNT/+IW2L/Pkpn/zxF
        aP8mL2L/Pj9l/51eY/+QU2X/cUFU/2Y6S/9gOEr/VjJE/0syQp82LENzOSdF/Vc3Tv+DTE3/jWFn/z5J
        ZP8uOVD/JipX/zQ2ZP+IWmn/oFZW/4JISv9oO0H/UzNB/0oxQP1FMz96PTNFODopROhZNUn/gkhK/45e
        Yv9HU3T/N0Fh/zE2bv81OWL/WUpj/51VU/+LTUj/ZjtB/0gtPf83KjjpOTI7PE1LVQc+LUSgVjJH/3xD
        TP+RWl7/b15w/1tUZv82PVT/PkNe/1JHXP+VWVX/h05J/2A6Qf9DLjz/Niw5oz5AQghJM0kASjlNL08y
        RthrN0f/gUNL/5RPUP+NW2D/T1qD/0VKav9FRVr/fGBq/4dSTf9dOUH/RjA92T81PzA8LzsAalloACAA
        DwBOOUpGWTNG2Wg2Rf98Qk//YlBx/09Zlf9SVHj/QU9k/2xoe/9/UFH/WjxD2U4+SUdKHzEAWE9XAAAA
        AABYVWMAAAAAAE07SS5cN0mgdD9S6VxVdv09VID/SlNx/2Zdcv2FYG7pfE5SoWRITS64AAAAaV5mAAAA
        AAAAAAAAAAAAANfY4wBuRmAAdFFqCHFDXDhvW3JzSmyClVtofJWBXG1zlV1nOIliaAiMXWQAub/FAAAA
        AAAAAAAA8A8AAMADAADAAQAAgAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAEAAMAD
        AADgBwAA8A8AAA==
</value>
  </data>
</root>